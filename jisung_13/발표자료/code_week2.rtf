{\rtf1\ansi\ansicpg949\cocoartf1504\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;\csgray\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 HANOI\'92S TOWER\
\

\f1 \'b1\'b8\'c7\'f6
\f0  
\f1 \'c1\'df\'c1\'a1
\f0  
\f1 \'bb\'e7\'c7\'d7 \
-typedef\
-stack\
-recursive\
-module\
\
\
\
	
\b\fs36 typedef
\b0\fs24 \
\
typedef char Data;\
\'c0\'da\'b7\'e1\'c7\'fc\'c0\'bb \'c0\'e7\'c1\'a4\'c0\'c7 \'c7\'cf\'bf\'a9 \'bb\'e7\'bf\'eb\'c7\'d1\'b4\'d9.\
->\'c0\'da\'b7\'e1\'c7\'fc\'c0\'bb \'ba\'af\'b0\'e6\'c7\'cf\'b1\'e2\'b0\'a1 \'bd\'b1\'b4\'d9.(alternative)\
\
\
\
	
\b\fs36 Stack ADT
\b0\fs24 \
\
typedef struct stack\{\
	Data ring[SIZE];\
	int top;\
	char name;\
\}stack;\
\
void stackInit(stack*);\
int stackEmpty(stack*);\
Data pop(stack*);\
Data top(stack*);\
void push(stack*,Data ring);\
\
\
\
	
\b\fs36 Recursive
\b0\fs24 \
\
void HanoiSort(stack *a, stack *b, stack *c,int n)\{\
		-\'bd\'ba\'c5\'c3 a\'bf\'a1\'bc\'ad b\'b8\'a6 \'b0\'c5\'c3\'c4\'bc\'ad c\'b7\'ce n\'b0\'b3\'b8\'a6 \'bf\'c5\'b1\'e4\'b4\'d9.\
		\
	if(n==1)\{\
		inputTower(c , outputTower(a));\
		\
			-\'c1\'be\'b7\'e1\'c1\'b6\'b0\'c7, return \'c0\'bb \'bd\'c7\'c7\'e0\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'cc \'be\'c6\'b4\'cf\'b4\'d9.(a\'bf\'a1\'bc\'ad \'b2\'a8\'b3\'bb\'be\'ee c\'bf\'a1 \'b3\'d6\'b4\'c2\'b4\'d9.)\
	\}\
	else\{\
		HanoiSort(a , c , b , n-1);  		-n-1\'b0\'b3\'b8\'a6 b\'b7\'ce \'bf\'c5\'b1\'e2\'b0\'ed\
		HanoiSort(a , b , c , 1);      		-a\'c0\'c7 \'c7\'cf\'b3\'aa \'b3\'b2\'c0\'ba \'b0\'cd\'c0\'bb c\'b7\'ce \'bf\'c5\'b1\'e4\'b4\'d9.\
		HanoiSort(b , a , c , n-1);  		-b\'bf\'a1 \'c0\'d6\'b4\'c2 n-1\'b0\'b3\'b8\'a6 a\'b8\'a6 \'b0\'c5\'c3\'c4 c\'b7\'ce \'bf\'c5\'b1\'e4\'b4\'d9.\
	\}\
\}\
\
\
	
\b\fs36 Module
\b0\fs24 \
\
Data outputTower(stack *target); 			-pop()\
void inputTower(stack *target, Data ring);		-push()\
void HanoiPrint(stack*,stack*,stack*); 			-stackPrint()\
}